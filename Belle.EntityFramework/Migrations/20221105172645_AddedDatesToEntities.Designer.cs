// <auto-generated />
using System;
using Belle.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Belle.EntityFramework.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20221105172645_AddedDatesToEntities")]
    partial class AddedDatesToEntities
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Belle.Database.Entities.ProductEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(511)
                        .HasColumnType("nvarchar(511)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(63)
                        .HasColumnType("nvarchar(63)");

                    b.Property<string>("PathToImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<long>("UserFK")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserFK");

                    b.ToTable("Products", (string)null);
                });

            modelBuilder.Entity("Belle.Database.Entities.UserEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(63)
                        .HasColumnType("nvarchar(63)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(63)
                        .HasColumnType("nvarchar(63)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<double>("WalletBalance")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedOn = new DateTime(2022, 11, 5, 19, 26, 45, 630, DateTimeKind.Local).AddTicks(3124),
                            Login = "Vadim",
                            Password = "1111",
                            Type = 0,
                            WalletBalance = 1000.0
                        },
                        new
                        {
                            Id = 2L,
                            CreatedOn = new DateTime(2022, 11, 5, 19, 26, 45, 630, DateTimeKind.Local).AddTicks(3163),
                            Login = "Vasia123",
                            Password = "1111",
                            Type = 1,
                            WalletBalance = 5831.0
                        },
                        new
                        {
                            Id = 3L,
                            CreatedOn = new DateTime(2022, 11, 5, 19, 26, 45, 630, DateTimeKind.Local).AddTicks(3166),
                            Login = "Petya13",
                            Password = "1111",
                            Type = 1,
                            WalletBalance = 421.0
                        });
                });

            modelBuilder.Entity("Belle.Database.Entities.ProductEntity", b =>
                {
                    b.HasOne("Belle.Database.Entities.UserEntity", "UserEntity")
                        .WithMany("Products")
                        .HasForeignKey("UserFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserEntity");
                });

            modelBuilder.Entity("Belle.Database.Entities.UserEntity", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
